#!/bin/bash

# This is a frontend script to the player. Recieving different 
# command it can start menu, restart player, display the queue, 
# and query the current track

# IMPORTANT: They must be the same as variables with the same names, 
#            defined in main.c
LOCKFILE_DIR=/tmp/dmenu-player-lockfile
FIFO_PIPE_DIR=/tmp/dmenu-player-pipe

MUSIC_DIR_PATH=$HOME/Music
MUSIC_DB_DIR_PATH=$HOME/work/dmenu-music-player
DAEMON_PATH=$HOME/work/dmenu-music-player
UPDATE_MUSIC_INFO_SCRIPT=""

help_and_exit () {
    echo "TODO: SHOW HELP!"
    exit 1
}

daemon_is_running () {
    [ -z "`lslocks | grep $LOCKFILE_DIR`" ]
}

for i in "$@"; do
    case $i in 
        --music-dir=*)
            MUSIC_DIR_PATH="${i#*=}"
        ;;
        --music-database-dir=*)
            MUSIC_DB_DIR_PATH="${i#*=}"
        ;;
        --update-music-info-scirpt=*)
            UPDATE_MUSIC_INFO_SCRIPT="${i#*=}"
        ;;
        --executable-dir=*)
            DAEMON_PATH="${i#*=}"
        ;;
        *)
            help_and_exit
        ;;
    esac
done

if daemon_is_running; then
    # It means player is not working yet. Start it immediately.
    echo "DEBUG: There is no lock, starting daemon..."
    $DAEMON_PATH/dmus-daemon --music-dir=$MUSIC_DIR_PATH --music-database-dir=$MUSIC_DB_DIR_PATH --update-music-info-scirpt=$UPDATE_MUSIC_INFO_SCRIPT&
else
    # Player is already running. 
    # Send a message that menu is requested.
    echo "DEBUG: There is lock."
    echo "menu-show" > $FIFO_PIPE_DIR
fi
